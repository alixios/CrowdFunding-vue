{"ast":null,"code":"import { generaMenu } from \"../../assets/js/menu\";\nexport default {\n  data: function () {\n    return {\n      loginForm: {\n        username: \"孔半仙\",\n        password: \"123456\",\n        code: \"\",\n        verKey: \"\"\n      },\n      verifyCode: \"\",\n      rules: {\n        username: [{\n          required: true,\n          message: \"用户名不能为空\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"密码不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      // Spring Security 要求用form表单提交post请求\n      this.$refs.ruleForm.validate(valid => {\n        // if (valid) {\n        //\n        // }\n        if (valid) {\n          const _this = this;\n\n          _this.axios.post(\"/api/login\", _this.loginForm).then(({\n            data\n          }) => {\n            if (data.flag) {\n              _this.$message.success(data.message); //_this.$store.commit(\"set_token\",data.data.token)\n              //_this.$store.state.token = data.data.token;\n              //_this.$store.commit(\"login\", data.data.user);\n              // 登录后保存用户信息\n              // 加载用户菜单\n\n\n              generaMenu();\n\n              _this.$message.success(\"登录成功\");\n\n              _this.$router.push({\n                path: \"/\"\n              });\n            }\n            /* else {\r\n             _this.$message.error(data.message);\r\n            }*/\n\n          });\n          /*   const _this = this;\r\n             // eslint-disable-next-line no-undef\r\n             var captcha = new TencentCaptcha(\r\n               this.config.TENCENT_CAPTCHA,\r\n               function(res) {\r\n                 if (res.ret === 0) {\r\n                   _this.axios.post(\"/api/login\", _this.loginForm).then( response => {\r\n                       if (response.flag) {\r\n                         _this.$message.success(response.message);\r\n                         _this.$store.commit(\"set_token\",response.data.token)\r\n                         _this.$store.state.token = response.data.token;\r\n                         _this.$store.commit(\"login\", response.data.user);\r\n                         // 登录后保存用户信息\r\n                         // 加载用户菜单\r\n                         generaMenu();\r\n                         _this.$message.success(\"登录成功\");\r\n                         _this.$router.push({ path: \"/\" });\r\n                       } else {\r\n                         _this.$message.error(response.message);\r\n                       }\r\n                     });\r\n                 }\r\n               }\r\n             );\r\n             // 显示验证码;\r\n             captcha.show();*/\n\n        } else {\n          return false;\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuCA;AACA;EACAA;IACA;MACAC;QACAC,eADA;QAEAC,kBAFA;QAGAC,QAHA;QAIAC;MAJA,CADA;MAOAC,cAPA;MAQAC;QACAL,WACA;UAAAM;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAP;UAAAK;UAAAC;UAAAC;QAAA;MAJA;IARA;EAeA,CAjBA;EAkBAC;IACAC;MACA;MACA;QACA;QACA;QACA;QACA;UACA;;UAEAC;YAAAb;UAAA;YACA;cACAa,qCADA,CAEA;cACA;cACA;cACA;cACA;;;cACAC;;cACAD;;cACAA;gBAAAE;cAAA;YACA;YAAA;AACA;AACA;;UACA,CAdA;UAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QACA,CA5CA,MA4CA;UACA;QACA;MACA,CAnDA;IAoDA;;EAvDA;AAlBA","names":["data","loginForm","username","password","code","verKey","verifyCode","rules","required","message","trigger","methods","login","_this","generaMenu","path"],"sourceRoot":"../crowdfunding-vue/src/views/login","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <div class=\"login-title\">管理员登录</div>\r\n      <!-- 登录表单 -->\r\n      <el-form\r\n        status-icon\r\n        :model=\"loginForm\"\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        class=\"login-form\"\r\n      >\r\n        <!-- 用户名输入框 -->\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            prefix-icon=\"el-icon-user-solid\"\r\n            placeholder=\"用户名\"\r\n            @keyup.enter.native=\"login\"\r\n          />\r\n        </el-form-item>\r\n        <!-- 密码输入框 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            prefix-icon=\"iconfont el-icon-mymima\"\r\n            show-password\r\n            placeholder=\"密码\"\r\n            @keyup.enter.native=\"login\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 登录按钮 -->\r\n      <el-button type=\"primary\" @click=\"login()\">登录</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { generaMenu } from \"../../assets/js/menu\";\r\nexport default {\r\n  data: function() {\r\n    return {\r\n      loginForm: {\r\n        username: \"孔半仙\",\r\n        password: \"123456\",\r\n        code: \"\",\r\n        verKey: \"\"\r\n      },\r\n      verifyCode: \"\",\r\n      rules: {\r\n        username: [\r\n          { required: true, message: \"用户名不能为空\", trigger: \"blur\" }\r\n        ],\r\n        password: [{ required: true, message: \"密码不能为空\", trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      // Spring Security 要求用form表单提交post请求\r\n      this.$refs.ruleForm.validate(valid => {\r\n        // if (valid) {\r\n        //\r\n        // }\r\n        if (valid) {\r\n          const _this = this;\r\n\r\n          _this.axios.post(\"/api/login\", _this.loginForm).then(({data}) => {\r\n            if (data.flag) {\r\n              _this.$message.success(data.message);\r\n              //_this.$store.commit(\"set_token\",data.data.token)\r\n              //_this.$store.state.token = data.data.token;\r\n              //_this.$store.commit(\"login\", data.data.user);\r\n              // 登录后保存用户信息\r\n              // 加载用户菜单\r\n              generaMenu();\r\n              _this.$message.success(\"登录成功\");\r\n              _this.$router.push({ path: \"/\" });\r\n            }/* else {\r\n              _this.$message.error(data.message);\r\n            }*/\r\n          });\r\n       /*   const _this = this;\r\n          // eslint-disable-next-line no-undef\r\n          var captcha = new TencentCaptcha(\r\n            this.config.TENCENT_CAPTCHA,\r\n            function(res) {\r\n              if (res.ret === 0) {\r\n                _this.axios.post(\"/api/login\", _this.loginForm).then( response => {\r\n                    if (response.flag) {\r\n                      _this.$message.success(response.message);\r\n                      _this.$store.commit(\"set_token\",response.data.token)\r\n                      _this.$store.state.token = response.data.token;\r\n                      _this.$store.commit(\"login\", response.data.user);\r\n                      // 登录后保存用户信息\r\n                      // 加载用户菜单\r\n                      generaMenu();\r\n                      _this.$message.success(\"登录成功\");\r\n                      _this.$router.push({ path: \"/\" });\r\n                    } else {\r\n                      _this.$message.error(response.message);\r\n                    }\r\n                  });\r\n              }\r\n            }\r\n          );\r\n          // 显示验证码;\r\n          captcha.show();*/\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background: url(http://images.newstar.net.cn/img/default-bg.jpeg)\r\n    center center / cover no-repeat;\r\n}\r\n.login-card {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: #fff;\r\n  padding: 170px 60px 180px;\r\n  width: 350px;\r\n}\r\n.login-title {\r\n  color: #303133;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n}\r\n.login-form {\r\n  margin-top: 1.2rem;\r\n}\r\n.login-card button {\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}