{"ast":null,"code":"var SEPARATION = 100,\n    AMOUNTX = 60,\n    AMOUNTY = 40;\nvar container;\nvar camera, scene, renderer;\nvar particles,\n    particle,\n    count = 0;\nvar mouseX = 0,\n    mouseY = 0;\nvar windowHalfX = window.innerWidth / 2;\nvar windowHalfY = window.innerHeight / 2; //初始化\n\nfunction init() {\n  container = document.createElement('div'); //创建容器\n\n  document.body.appendChild(container); //将容器添加到页面上\n\n  camera = new THREE.PerspectiveCamera(120, window.innerWidth / window.innerHeight, 1, 1500); //创建透视相机设置相机角度大小等\n\n  camera.position.set(0, 450, 2000); //设置相机位置\n\n  scene = new THREE.Scene(); //创建场景\n\n  particles = new Array();\n  var PI2 = Math.PI * 2; //设置粒子的大小，颜色位置等\n\n  var material = new THREE.ParticleCanvasMaterial({\n    color: 0x0f96ff,\n    vertexColors: true,\n    size: 4,\n    program: function (context) {\n      context.beginPath();\n      context.arc(0, 0, 0.01, 0, PI2, true); //画一个圆形。此处可修改大小。\n\n      context.fill();\n    }\n  }); //设置长条粒子的大小颜色长度等\n\n  var materialY = new THREE.ParticleCanvasMaterial({\n    color: 0xffffff,\n    vertexColors: true,\n    size: 1,\n    program: function (context) {\n      context.beginPath(); //绘制渐变色的矩形\n\n      var lGrd = context.createLinearGradient(-0.008, 0.25, 0.016, -0.25);\n      lGrd.addColorStop(0, '#16eff7');\n      lGrd.addColorStop(1, '#0090ff');\n      context.fillStyle = lGrd;\n      context.fillRect(-0.008, 0.25, 0.016, -0.25); //注意此处的坐标大小\n      //绘制底部和顶部圆圈\n\n      context.fillStyle = \"#0090ff\";\n      context.arc(0, 0, 0.008, 0, PI2, true); //绘制底部圆圈\n\n      context.fillStyle = \"#16eff7\";\n      context.arc(0, 0.25, 0.008, 0, PI2, true); //绘制顶部圆圈\n\n      context.fill();\n      context.closePath(); //绘制顶部渐变色光圈\n\n      var rGrd = context.createRadialGradient(0, 0.25, 0, 0, 0.25, 0.025);\n      rGrd.addColorStop(0, 'transparent');\n      rGrd.addColorStop(1, '#16eff7');\n      context.fillStyle = rGrd;\n      context.arc(0, 0.25, 0.025, 0, PI2, true); //绘制一个圆圈\n\n      context.fill();\n    }\n  }); //循环判断创建随机数选择创建粒子或者粒子条\n\n  var i = 0;\n\n  for (var ix = 0; ix < AMOUNTX; ix++) {\n    for (var iy = 0; iy < AMOUNTY; iy++) {\n      var num = Math.random() - 0.1;\n\n      if (num > 0) {\n        particle = particles[i++] = new THREE.Particle(material);\n        console.log(\"material\");\n      } else {\n        particle = particles[i++] = new THREE.Particle(materialY);\n        console.log(\"materialY\");\n      } //particle = particles[ i ++ ] = new THREE.Particle( material );\n\n\n      particle.position.x = ix * SEPARATION - AMOUNTX * SEPARATION / 2;\n      particle.position.z = iy * SEPARATION - AMOUNTY * SEPARATION / 2;\n      scene.add(particle);\n    }\n  }\n\n  renderer = new THREE.CanvasRenderer();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  container.appendChild(renderer.domElement); //document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n  //document.addEventListener( 'touchstart', onDocumentTouchStart, false );\n  //document.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\n  window.addEventListener('resize', onWindowResize, false);\n} //浏览器大小改变时重新渲染\n\n\nfunction onWindowResize() {\n  windowHalfX = window.innerWidth / 2;\n  windowHalfY = window.innerHeight / 2;\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  render();\n} //将相机和场景渲染到页面上\n\n\nfunction render() {\n  var i = 0; //更新粒子的位置和大小\n\n  for (var ix = 0; ix < AMOUNTX; ix++) {\n    for (var iy = 0; iy < AMOUNTY; iy++) {\n      particle = particles[i++]; //更新粒子位置\n\n      particle.position.y = Math.sin((ix + count) * 0.3) * 50 + Math.sin((iy + count) * 0.5) * 50; //更新粒子大小\n\n      particle.scale.x = particle.scale.y = particle.scale.z = ((Math.sin((ix + count) * 0.3) + 1) * 4 + (Math.sin((iy + count) * 0.5) + 1) * 4) * 50; //正常情况下再放大100倍*1200\n    }\n  }\n\n  renderer.render(scene, camera);\n  count += 0.1;\n}","map":{"version":3,"names":["SEPARATION","AMOUNTX","AMOUNTY","container","camera","scene","renderer","particles","particle","count","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","init","document","createElement","body","appendChild","THREE","PerspectiveCamera","position","set","Scene","Array","PI2","Math","PI","material","ParticleCanvasMaterial","color","vertexColors","size","program","context","beginPath","arc","fill","materialY","lGrd","createLinearGradient","addColorStop","fillStyle","fillRect","closePath","rGrd","createRadialGradient","i","ix","iy","num","random","Particle","console","log","x","z","add","CanvasRenderer","setSize","domElement","addEventListener","onWindowResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render","y","sin","scale"],"sources":["D:/springboot+vue/CrowdFunding-Vue/crowdfunding-home/src/assets/js/login.js"],"sourcesContent":["var SEPARATION = 100, AMOUNTX = 60, AMOUNTY = 40;\nvar container;\nvar camera, scene, renderer;\nvar particles, particle, count = 0;\nvar mouseX = 0, mouseY = 0;\nvar windowHalfX = window.innerWidth / 2;\nvar windowHalfY = window.innerHeight / 2;\n\n\n\n//初始化\nfunction init() {\n\n\tcontainer = document.createElement( 'div' );\t//创建容器\n\tdocument.body.appendChild( container );\t\t\t//将容器添加到页面上\n\tcamera = new THREE.PerspectiveCamera( 120, window.innerWidth / window.innerHeight, 1, 1500 );\t\t//创建透视相机设置相机角度大小等\n\tcamera.position.set(0,450,2000);\t\t//设置相机位置\n\n\tscene = new THREE.Scene();\t\t\t//创建场景\n\tparticles = new Array();\n\n\tvar PI2 = Math.PI * 2;\n\t//设置粒子的大小，颜色位置等\n\tvar material = new THREE.ParticleCanvasMaterial( {\n\t\tcolor: 0x0f96ff,\n\t\tvertexColors:true,\n\t\tsize: 4,\n\t\tprogram: function ( context ) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc( 0, 0, 0.01, 0, PI2, true );\t//画一个圆形。此处可修改大小。\n\t\t\tcontext.fill();\n\t\t}\n\t} );\n\t//设置长条粒子的大小颜色长度等\n\tvar materialY = new THREE.ParticleCanvasMaterial( {\n\t\tcolor: 0xffffff,\n\t\tvertexColors:true,\n\t\tsize: 1,\n\t\tprogram: function ( context ) {\n\n\t\t\tcontext.beginPath();\n\t\t\t//绘制渐变色的矩形\n\t\t\tvar lGrd = context.createLinearGradient(-0.008,0.25,0.016,-0.25);\n\t\t\tlGrd.addColorStop(0, '#16eff7');\n\t\t\tlGrd.addColorStop(1, '#0090ff');\n\t\t\tcontext.fillStyle = lGrd;\n\t\t\tcontext.fillRect(-0.008,0.25,0.016,-0.25);  //注意此处的坐标大小\n\t\t\t//绘制底部和顶部圆圈\n\t\t\tcontext.fillStyle = \"#0090ff\";\n\t\t\tcontext.arc(0, 0, 0.008, 0, PI2, true);    //绘制底部圆圈\n\t\t\tcontext.fillStyle = \"#16eff7\";\n\t\t\tcontext.arc(0, 0.25, 0.008, 0, PI2, true);    //绘制顶部圆圈\n\t\t\tcontext.fill();\n\t\t\tcontext.closePath();\n\t\t\t//绘制顶部渐变色光圈\n\t\t\tvar rGrd = context.createRadialGradient(0, 0.25, 0, 0, 0.25, 0.025);\n\t\t\trGrd.addColorStop(0, 'transparent');\n\t\t\trGrd.addColorStop(1, '#16eff7');\n\t\t\tcontext.fillStyle = rGrd;\n\t\t\tcontext.arc(0, 0.25, 0.025, 0, PI2, true);    //绘制一个圆圈\n\t\t\tcontext.fill();\n\n\t\t}\n\t} );\n\n\t//循环判断创建随机数选择创建粒子或者粒子条\n\tvar i = 0;\n\tfor ( var ix = 0; ix < AMOUNTX; ix ++ ) {\n\t\tfor ( var iy = 0; iy < AMOUNTY; iy ++ ) {\n\t\t\tvar num = Math.random()-0.1;\n\t\t\tif (num >0 ) {\n\t\t\t\tparticle = particles[ i ++ ] = new THREE.Particle( material );\n\t\t\t\tconsole.log(\"material\")\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparticle = particles[ i ++ ] = new THREE.Particle( materialY );\n\t\t\t\tconsole.log(\"materialY\")\n\t\t\t}\n\t\t\t//particle = particles[ i ++ ] = new THREE.Particle( material );\n\t\t\tparticle.position.x = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 );\n\t\t\tparticle.position.z = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 );\n\t\t\tscene.add( particle );\n\t\t}\n\t}\n\n\trenderer = new THREE.CanvasRenderer();\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tcontainer.appendChild( renderer.domElement );\n\t//document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t//document.addEventListener( 'touchstart', onDocumentTouchStart, false );\n\t//document.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\twindow.addEventListener( 'resize', onWindowResize, false );\n}\n\n//浏览器大小改变时重新渲染\nfunction onWindowResize() {\n\twindowHalfX = window.innerWidth / 2;\n\twindowHalfY = window.innerHeight / 2;\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n}\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n\trender();\n}\n\n//将相机和场景渲染到页面上\nfunction render() {\n\tvar i = 0;\n\t//更新粒子的位置和大小\n\tfor (var ix = 0; ix < AMOUNTX; ix++) {\n\t\tfor (var iy = 0; iy < AMOUNTY; iy++) {\n\t\t\tparticle = particles[i++];\n\t\t\t//更新粒子位置\n\t\t\tparticle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\n\t\t\t//更新粒子大小\n\t\t\tparticle.scale.x =  particle.scale.y = particle.scale.z  = ( (Math.sin((ix + count) * 0.3) + 1) * 4 + (Math.sin((iy + count) * 0.5) + 1) * 4 )*50;\t//正常情况下再放大100倍*1200\n\t\t}\n\t}\n\trenderer.render( scene, camera );\n\tcount += 0.1;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}